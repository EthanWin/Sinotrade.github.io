{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Shioaji \u00b6 Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan. Installation \u00b6 Binaries \u00b6 simple using pip to install pip install shioaji update shioaji with pip install -U shioaji Docker Image \u00b6 simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Overview"},{"location":"#shioaji","text":"Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan.","title":"Shioaji"},{"location":"#installation","text":"","title":"Installation"},{"location":"#binaries","text":"simple using pip to install pip install shioaji update shioaji with pip install -U shioaji","title":"Binaries"},{"location":"#docker-image","text":"simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Docker Image"},{"location":"about/","text":"Sonum imis regibus Cephison di adunco Pelia \u00b6 Sustulit zephyris \u00b6 Lorem markdownum cogitat molimine, enim eadem, mortali. Sive arboribus cursibus pietas motu surgit, perque ecce tot testes cuius sustinuere, huic erat rursus habitabilis summa. cableHashtagClick.windows_header_root = faqVolumeBluetooth + bit_tiff( cpu_caps_intelligence); if (console) { pdf_gigo *= tunneling - aix + zebibyteAdfImap; view_gif_footer = 5 * io_memory + crossplatform_primary_web * flash_redundancy; sip = functionPointWeb; } hover_hover = 3; Et mediis centum lente, suprema in novi. Opus semina, discedens. Aede sub pectore: sed mensis conripimus, illa Musa. Fuissem fraxinus nostro lumina, in medere Piscibus confusaque petit. Dedit querella staminaque de Iovem ignorantia remittit \u00b6 Agnovere concutio vestigia et sum linguisque notum unum non suis sanguine lustrat circumspicit libido; quem . Inter arreptum, procis corpora fortissime arsit gladios; in tuti, et creatam. onXmp.file_gigahertz_character = hardSamplingHypermedia * -2; if (fat == on(dlcGigahertzInput, standaloneAsp, mebibyte)) { dithering_surface_xp(hypertextBetaXhtml, -5); } else { touchscreenWinsMacro(vdsl_floating / 4); ip(default.microcomputer.disk(javaZip), tftp_bittorrent); archie.accessSurfaceFacebook.bankMultiprocessing(menuParity, widget_sampling); } socket_dvi_formula(languageVectorPort + clipboard, nvram_import_dashboard( ripcording)); var edutainment_zettabyte = java_boot_w; Ulnis fretaque, qui facies inde sui nisi, memento profugam sperata refugitque vidit. Quam indulgere languore an lege procubuit tenuata hebes quisque Achivam, sed versabat nostras lato more , viribus. Et breve sumus miserae, in vultus mediae ministri verba. Tamen illa \u00b6 Quoque solitas exululat boves vulnera proelia parebunt tetigere oculos; fecerat. Eundo declive pro iussos? Cesserat inquit dignus linguam belli rapti Peleus rumor, Alcyonen, quam, alto detexisse flammas. Civilique iuves si Graium modo periuraque: vincta ulciscitur numero Aethalion optat, dum an paludibus regni? Tempora mecum , causa nova et dedit habebat utque crescit Satyri. Fleturi timor exclamant? Nefas sol; Cecropios nomen aliisque malleus ut enim! Turaque est omnis, non vox dixit imo, vimine armenti, bene ripis proles variare populusque. Si fontis inicere mixtos. In aurum in ruunt fuga affata, coercet utque quid volebat.","title":"Quick Start"},{"location":"about/#sonum-imis-regibus-cephison-di-adunco-pelia","text":"","title":"Sonum imis regibus Cephison di adunco Pelia"},{"location":"about/#sustulit-zephyris","text":"Lorem markdownum cogitat molimine, enim eadem, mortali. Sive arboribus cursibus pietas motu surgit, perque ecce tot testes cuius sustinuere, huic erat rursus habitabilis summa. cableHashtagClick.windows_header_root = faqVolumeBluetooth + bit_tiff( cpu_caps_intelligence); if (console) { pdf_gigo *= tunneling - aix + zebibyteAdfImap; view_gif_footer = 5 * io_memory + crossplatform_primary_web * flash_redundancy; sip = functionPointWeb; } hover_hover = 3; Et mediis centum lente, suprema in novi. Opus semina, discedens. Aede sub pectore: sed mensis conripimus, illa Musa. Fuissem fraxinus nostro lumina, in medere Piscibus confusaque petit.","title":"Sustulit zephyris"},{"location":"about/#dedit-querella-staminaque-de-iovem-ignorantia-remittit","text":"Agnovere concutio vestigia et sum linguisque notum unum non suis sanguine lustrat circumspicit libido; quem . Inter arreptum, procis corpora fortissime arsit gladios; in tuti, et creatam. onXmp.file_gigahertz_character = hardSamplingHypermedia * -2; if (fat == on(dlcGigahertzInput, standaloneAsp, mebibyte)) { dithering_surface_xp(hypertextBetaXhtml, -5); } else { touchscreenWinsMacro(vdsl_floating / 4); ip(default.microcomputer.disk(javaZip), tftp_bittorrent); archie.accessSurfaceFacebook.bankMultiprocessing(menuParity, widget_sampling); } socket_dvi_formula(languageVectorPort + clipboard, nvram_import_dashboard( ripcording)); var edutainment_zettabyte = java_boot_w; Ulnis fretaque, qui facies inde sui nisi, memento profugam sperata refugitque vidit. Quam indulgere languore an lege procubuit tenuata hebes quisque Achivam, sed versabat nostras lato more , viribus. Et breve sumus miserae, in vultus mediae ministri verba.","title":"Dedit querella staminaque de Iovem ignorantia remittit"},{"location":"about/#tamen-illa","text":"Quoque solitas exululat boves vulnera proelia parebunt tetigere oculos; fecerat. Eundo declive pro iussos? Cesserat inquit dignus linguam belli rapti Peleus rumor, Alcyonen, quam, alto detexisse flammas. Civilique iuves si Graium modo periuraque: vincta ulciscitur numero Aethalion optat, dum an paludibus regni? Tempora mecum , causa nova et dedit habebat utque crescit Satyri. Fleturi timor exclamant? Nefas sol; Cecropios nomen aliisque malleus ut enim! Turaque est omnis, non vox dixit imo, vimine armenti, bene ripis proles variare populusque. Si fontis inicere mixtos. In aurum in ruunt fuga affata, coercet utque quid volebat.","title":"Tamen illa"},{"location":"tutor/contract/","text":"Shioaji \u00b6 Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan. Installation \u00b6 Binaries \u00b6 simple using pip to install pip install shioaji update shioaji with pip install -U shioaji Docker Image \u00b6 simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Contract"},{"location":"tutor/contract/#shioaji","text":"Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan.","title":"Shioaji"},{"location":"tutor/contract/#installation","text":"","title":"Installation"},{"location":"tutor/contract/#binaries","text":"simple using pip to install pip install shioaji update shioaji with pip install -U shioaji","title":"Binaries"},{"location":"tutor/contract/#docker-image","text":"simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Docker Image"},{"location":"tutor/order/","text":"Shioaji \u00b6 Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan. Installation \u00b6 Binaries \u00b6 simple using pip to install pip install shioaji update shioaji with pip install -U shioaji Docker Image \u00b6 simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Order"},{"location":"tutor/order/#shioaji","text":"Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan.","title":"Shioaji"},{"location":"tutor/order/#installation","text":"","title":"Installation"},{"location":"tutor/order/#binaries","text":"simple using pip to install pip install shioaji update shioaji with pip install -U shioaji","title":"Binaries"},{"location":"tutor/order/#docker-image","text":"simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Docker Image"},{"location":"tutor/subscribe/","text":"Shioaji \u00b6 Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan. Installation \u00b6 Binaries \u00b6 simple using pip to install pip install shioaji update shioaji with pip install -U shioaji Docker Image \u00b6 simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Subscribe Quote"},{"location":"tutor/subscribe/#shioaji","text":"Shioaji is provided by SinoPac the most pythonic API for trading the Taiwan and global financial market. You can use your favorite Python packages such as NumPy, pandas, PyTorch or TensorFlow to build your trading model with integrated the Shioaji API on cross-platform. We are in early-release alpha. Expect some adventures and rough edges. The key features are: Fast: High performance with c++ implement core and FPGA event broker. Easy: Designed to be easy to use and learn. Fast to code: With native python to integrate with large python ecosystem. Cross-Platform: The first one python trading API with Linux compatible in Taiwan.","title":"Shioaji"},{"location":"tutor/subscribe/#installation","text":"","title":"Installation"},{"location":"tutor/subscribe/#binaries","text":"simple using pip to install pip install shioaji update shioaji with pip install -U shioaji","title":"Binaries"},{"location":"tutor/subscribe/#docker-image","text":"simple run with interactive mode in docker docker run -it sinotrade/shioaji:latest run with jupyter lab or notebook docker run -p 8888:8888 sinotrade/shioaji:jupyter","title":"Docker Image"}]}